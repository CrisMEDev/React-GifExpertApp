{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","gif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAuCeA,EApCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,aADA,CACA,QAAMC,SAdW,SAACC,GAClBA,EAAMC,iBAEDJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OAEvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAeE,EAAMQ,OAAOF,a,QCNvBG,EAAc,SAAC,GAAkC,EAAhCC,GAAiC,IAAD,IAA5BC,aAA4B,MAAtB,WAAsB,EAAVC,EAAU,EAAVA,IAIhD,MAFsB,KAAjBD,EAAMT,SAAgBS,EAAQ,YAG/B,sBAAKE,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAKJ,IACtB,4BAAKA,Q,uBCRJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,mGAEsFO,UAAUF,IAFhG,SAIKG,MAAOR,GAJZ,cAIbS,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAXtB,kBAeZY,GAfY,4CAAH,sDC0BLK,EAvBM,SAAEZ,GAEnB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBT,KAAMY,EACNL,SAAS,SAGlB,CAAEb,IAGEc,GCAIK,EAjBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEf,EAAiCY,EAAcZ,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAKb,IACHa,EAAU,4CAAqB,KACjC,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAACY,GAAD,OAAS,cAAC,EAAD,eAAiCA,GAAdA,EAAI3B,aCoBjD4B,EA5BM,WAGjB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCjBjCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83f8078a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Hola mundo');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue( event.target.value );\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();     // Evitar el refresh del navegador con form\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            // Se cambia el valor en la lista con el nuevo estado del input value\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        // EL onUbmit es atrapado en el event del handleSubmit\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title='No title', url }) => {\r\n\r\n    if ( title.trim() === '' ) title = 'No title';\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=qzf3ZJnMp0UZ8XWinWruIjcItFVeMi7D&limit=10&q=${ encodeURI(category) }`;\r\n\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( (img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => setState({\r\n                data: imgs,\r\n                loading: false\r\n            }));\r\n\r\n    }, [ category ]);   // El category en el array indica que el effect se disapara cuando\r\n                        // la categoria cambie\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading ? <p>Cargando...</p> : null}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (gif) => <GifGridItem key={ gif.id } { ...gif } /> )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, {useState} from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const [categories, setCategories] = useState(['Warframe', 'God of war', 'Dark souls']);\r\n    const [categories, setCategories] = useState(['Warframe']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            {/* Se pasa la referencia a setCategories al componenteAdcategories */}\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>    \r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}